{"paragraphs":[{"text":"%md\n#Extractions de features\nVariables nécessaires pour la prediction (toute les variables ne sont pas prédictives) : \n- Pclass, sex ,age,SibSp,Parch,Fare,embarked, survived","dateUpdated":"Mar 6, 2016 7:24:30 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457286951397_-28140923","id":"20160306-175551_1474845266","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Extractions de features</h1>\n<p>Variables nécessaires pour la prediction (toute les variables ne sont pas prédictives) :</p>\n<ul>\n<li>Pclass, sex ,age,SibSp,Parch,Fare,embarked, survived</li>\n</ul>\n"},"dateCreated":"Mar 6, 2016 5:55:51 PM","dateStarted":"Mar 6, 2016 7:24:27 PM","dateFinished":"Mar 6, 2016 7:24:28 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8627"},{"text":"%md\nCas des valeurs incohérentes : \nVu dans le notebook 1, un certain nombre de lignes contienne un age null et fare à 0.\n__Nous prenons le choix pour un premier essai d'exclure les lignes avec age=null & fare=0__","dateUpdated":"Mar 6, 2016 7:24:37 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287184479_-1835570306","id":"20160306-175944_722132676","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Cas des valeurs incohérentes :\n<br  />Vu dans le notebook 1, un certain nombre de lignes contienne un age null et fare à 0.\n<br  /><strong>Nous prenons le choix pour un premier essai d'exclure les lignes avec age=null &amp; fare=0</strong></p>\n"},"dateCreated":"Mar 6, 2016 5:59:44 PM","dateStarted":"Mar 6, 2016 7:24:35 PM","dateFinished":"Mar 6, 2016 7:24:36 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8628"},{"title":"Selection des données","text":"val df = sqlContext.sql(\"select Pclass, sex ,age,SibSp,Parch,Fare,embarked , Double(survived) survived from titanic where age is not null and fare!=0 \")\ndf.show(5)\n","dateUpdated":"Mar 6, 2016 7:24:42 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287310864_432340570","id":"20160306-180150_2043424406","result":{"code":"SUCCESS","type":"TEXT","msg":"df: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double]\n+------+------+----+-----+-----+-------+--------+--------+\n|Pclass|   sex| age|SibSp|Parch|   Fare|embarked|survived|\n+------+------+----+-----+-----+-------+--------+--------+\n|     3|  male|22.0|    1|    0|   7.25|       S|     0.0|\n|     1|female|38.0|    1|    0|71.2833|       C|     1.0|\n|     3|female|26.0|    0|    0|  7.925|       S|     1.0|\n|     1|female|35.0|    1|    0|   53.1|       S|     1.0|\n|     3|  male|35.0|    0|    0|   8.05|       S|     0.0|\n+------+------+----+-----+-----+-------+--------+--------+\nonly showing top 5 rows\n\n"},"dateCreated":"Mar 6, 2016 6:01:50 PM","dateStarted":"Mar 6, 2016 7:24:39 PM","dateFinished":"Mar 6, 2016 7:24:40 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8629"},{"text":"%md\n\n###Input /Output algo ML\nLes algorithme ML de spark prennent en entrée __un tableau de Double__ ex : [12.3 23.0 13.0...] ==> les features \nLes algorithme ML de spark prédise un __Double__ ex : 1.0 ==> Survivant","dateUpdated":"Mar 6, 2016 7:24:46 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287085429_-642818068","id":"20160306-175805_1260226993","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Input /Output algo ML</h3>\n<p>Les algorithme ML de spark prennent en entrée <strong>un tableau de Double</strong> ex : [12.3 23.0 13.0&hellip;] ==> les features\n<br  />Les algorithme ML de spark prédise un <strong>Double</strong> ex : 1.0 ==> Survivant</p>\n"},"dateCreated":"Mar 6, 2016 5:58:05 PM","dateStarted":"Mar 6, 2016 5:59:03 PM","dateFinished":"Mar 6, 2016 5:59:03 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8630"},{"text":"%md\nNotre datset contient des String (Sex et Embarked) qu'il va falloir transformer en Double\nSurvived est un Int qu'il va faloir convertir en Double","dateUpdated":"Mar 6, 2016 7:24:49 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287120298_-1518830016","id":"20160306-175840_1816704390","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Notre datset contient des String (Sex et Embarked) qu'il va falloir transformer en Double\n<br  />Survived est un Int qu'il va faloir convertir en Double</p>\n"},"dateCreated":"Mar 6, 2016 5:58:40 PM","dateStarted":"Mar 6, 2016 6:04:11 PM","dateFinished":"Mar 6, 2016 6:04:11 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8631"},{"text":"%md\nPour convertir un String en Double utilisation de la fonction Spark native  StringIndexer() qui ajoute un champ Double au DataFrame","dateUpdated":"Mar 6, 2016 7:24:51 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287168512_-1102875","id":"20160306-175928_1370019048","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Pour convertir un String en Double utilisation de la fonction Spark native  StringIndexer() qui ajoute un champ Double au DataFrame</p>\n"},"dateCreated":"Mar 6, 2016 5:59:28 PM","dateStarted":"Mar 6, 2016 6:04:11 PM","dateFinished":"Mar 6, 2016 6:04:11 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8632"},{"title":"Creation de la variable indexedSex","text":"import org.apache.spark.ml.feature.StringIndexer\n\nval sexIndexer = new StringIndexer()\n  .setInputCol(\"sex\")\n  .setOutputCol(\"indexedSex\")\n  .fit(df)\n  \n val debugDFSexIndexed = sexIndexer.transform(df)//Debug regarder comment est transformer la variable sex\n debugDFSexIndexed.select(\"sex\",\"indexedSex\").show(3)","dateUpdated":"Mar 6, 2016 7:24:53 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287451502_1843381708","id":"20160306-180411_871877970","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.feature.StringIndexer\nsexIndexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_c74ee81cd27a\ndebugDFSexIndexed: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double, indexedSex: double]\n+------+----------+\n|   sex|indexedSex|\n+------+----------+\n|  male|       0.0|\n|female|       1.0|\n|female|       1.0|\n+------+----------+\nonly showing top 3 rows\n\n"},"dateCreated":"Mar 6, 2016 6:04:11 PM","dateStarted":"Mar 6, 2016 7:24:53 PM","dateFinished":"Mar 6, 2016 7:24:54 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8633"},{"text":"%md\nFaire de même pour la colonne  embarked : la transformer en la variable indexedEmbarked","dateUpdated":"Mar 6, 2016 7:24:57 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287486412_1859787993","id":"20160306-180446_867558604","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Faire de même pour la colonne  embarked : la transformer en la variable indexedEmbarked</p>\n"},"dateCreated":"Mar 6, 2016 6:04:46 PM","dateStarted":"Mar 6, 2016 6:06:15 PM","dateFinished":"Mar 6, 2016 6:06:15 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8634"},{"title":"Création de la variable indexedEmbarked","text":"import org.apache.spark.ml.feature.StringIndexer\n\nval embarkedIndexer = new StringIndexer()\n  .setInputCol(\"embarked\")\n  .setOutputCol(\"indexedEmbarked\")\n  .fit(df)\n  \n  \nval debugDFEmbarkedIndexed = embarkedIndexer.transform(debugDFSexIndexed)\n\ndebugDFEmbarkedIndexed.select(\"embarked\",\"indexedEmbarked\").show(3)","dateUpdated":"Mar 6, 2016 7:24:59 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287505277_-1622543654","id":"20160306-180505_1677466500","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.feature.StringIndexer\nembarkedIndexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_40e31ef237a0\ndebugDFEmbarkedIndexed: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double, indexedSex: double, indexedEmbarked: double]\n+--------+---------------+\n|embarked|indexedEmbarked|\n+--------+---------------+\n|       S|            0.0|\n|       C|            1.0|\n|       S|            0.0|\n+--------+---------------+\nonly showing top 3 rows\n\n"},"dateCreated":"Mar 6, 2016 6:05:05 PM","dateStarted":"Mar 6, 2016 7:24:59 PM","dateFinished":"Mar 6, 2016 7:25:00 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8635"},{"text":"%md\n#### Transfomation des features en tableau de Double ([12.3 24.4....])\nPour cela utilisation de la fonction Spark VectorAssembler","dateUpdated":"Mar 6, 2016 7:25:04 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287587139_120307567","id":"20160306-180627_1391632769","dateCreated":"Mar 6, 2016 6:06:27 PM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:8636"},{"title":"Création de la variable \"features\"","text":"import org.apache.spark.ml.feature.VectorAssembler\n\nval assembler = new VectorAssembler()\n  .setInputCols(Array(\"Pclass\",\"indexedSex\" ,\"age\",\"SibSp\",\"Parch\",\"Fare\",\"indexedEmbarked\"))\n  .setOutputCol(\"features\")\n  \n  \n  val debugFeaturesDF =   assembler.transform(debugDFEmbarkedIndexed)\n  \n  debugFeaturesDF.registerTempTable(\"featuresDF\")\n  ","dateUpdated":"Mar 6, 2016 7:25:06 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287615768_-107666285","id":"20160306-180655_414398878","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.feature.VectorAssembler\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_c2a89af68c92\ndebugFeaturesDF: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double, indexedSex: double, indexedEmbarked: double, features: vector]\n"},"dateCreated":"Mar 6, 2016 6:06:55 PM","dateStarted":"Mar 6, 2016 7:25:06 PM","dateFinished":"Mar 6, 2016 7:25:07 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8637"},{"text":"%sql\nselect * from featuresDF limit 2","dateUpdated":"Mar 6, 2016 7:25:13 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287640367_-992942856","id":"20160306-180720_727789415","result":{"code":"SUCCESS","type":"TABLE","msg":"Pclass\tsex\tage\tSibSp\tParch\tFare\tembarked\tsurvived\tindexedSex\tindexedEmbarked\tfeatures\n3\tmale\t22.0\t1\t0\t7.25\tS\t0.0\t0.0\t0.0\t[3.0,0.0,22.0,1.0,0.0,7.25,0.0]\n1\tfemale\t38.0\t1\t0\t71.2833\tC\t1.0\t1.0\t1.0\t[1.0,1.0,38.0,1.0,0.0,71.2833,1.0]\n","comment":"","msgTable":[[{"key":"sex","value":"3"},{"key":"sex","value":"male"},{"key":"sex","value":"22.0"},{"key":"sex","value":"1"},{"key":"sex","value":"0"},{"key":"sex","value":"7.25"},{"key":"sex","value":"S"},{"key":"sex","value":"0.0"},{"key":"sex","value":"0.0"},{"key":"sex","value":"0.0"},{"key":"sex","value":"[3.0,0.0,22.0,1.0,0.0,7.25,0.0]"}],[{"key":"age","value":"1"},{"key":"age","value":"female"},{"key":"age","value":"38.0"},{"key":"age","value":"1"},{"key":"age","value":"0"},{"key":"age","value":"71.2833"},{"key":"age","value":"C"},{"key":"age","value":"1.0"},{"key":"age","value":"1.0"},{"key":"age","value":"1.0"},{"key":"age","value":"[1.0,1.0,38.0,1.0,0.0,71.2833,1.0]"}]],"columnNames":[{"name":"Pclass","index":0,"aggr":"sum"},{"name":"sex","index":1,"aggr":"sum"},{"name":"age","index":2,"aggr":"sum"},{"name":"SibSp","index":3,"aggr":"sum"},{"name":"Parch","index":4,"aggr":"sum"},{"name":"Fare","index":5,"aggr":"sum"},{"name":"embarked","index":6,"aggr":"sum"},{"name":"survived","index":7,"aggr":"sum"},{"name":"indexedSex","index":8,"aggr":"sum"},{"name":"indexedEmbarked","index":9,"aggr":"sum"},{"name":"features","index":10,"aggr":"sum"}],"rows":[["3","male","22.0","1","0","7.25","S","0.0","0.0","0.0","[3.0,0.0,22.0,1.0,0.0,7.25,0.0]"],["1","female","38.0","1","0","71.2833","C","1.0","1.0","1.0","[1.0,1.0,38.0,1.0,0.0,71.2833,1.0]"]]},"dateCreated":"Mar 6, 2016 6:07:20 PM","dateStarted":"Mar 6, 2016 7:25:13 PM","dateFinished":"Mar 6, 2016 7:25:14 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8638"},{"text":"%md\nSpark necessite de tranformer le label avec IndexedLabel pour obtenir des metadonnées sur le label ","dateUpdated":"Mar 6, 2016 7:25:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287663052_575155743","id":"20160306-180743_1840065668","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Spark necessite de tranformer le label avec IndexedLabel pour obtenir des metadonnées sur le label</p>\n"},"dateCreated":"Mar 6, 2016 6:07:43 PM","dateStarted":"Mar 6, 2016 6:08:24 PM","dateFinished":"Mar 6, 2016 6:08:24 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8639"},{"text":"val labelIndexer = new StringIndexer()\n  .setInputCol(\"survived\")\n  .setOutputCol(\"survivedIndexed\")\n  .fit(df)","dateUpdated":"Mar 6, 2016 7:25:20 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287938389_928541292","id":"20160306-181218_1981724484","result":{"code":"SUCCESS","type":"TEXT","msg":"labelIndexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_ef1560b36ffb\n"},"dateCreated":"Mar 6, 2016 6:12:18 PM","dateStarted":"Mar 6, 2016 7:25:20 PM","dateFinished":"Mar 6, 2016 7:25:20 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8640"},{"text":"%md\nVariable prédictive : features\nVariable cible : survived","dateUpdated":"Mar 6, 2016 7:25:24 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287704339_1785252331","id":"20160306-180824_839983464","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Variable prédictive : features\n<br  />Variable cible : survived</p>\n"},"dateCreated":"Mar 6, 2016 6:08:24 PM","dateStarted":"Mar 6, 2016 6:08:54 PM","dateFinished":"Mar 6, 2016 6:08:54 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8641"},{"text":"%md\n#Definition du modèle\nNous prenons le choix de tester une regression logistique","dateUpdated":"Mar 6, 2016 7:25:26 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287734712_395401386","id":"20160306-180854_333802088","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Definition du modèle</h1>\n<p>Nous prenons le choix de tester une regression logistique</p>\n"},"dateCreated":"Mar 6, 2016 6:08:54 PM","dateStarted":"Mar 6, 2016 6:10:26 PM","dateFinished":"Mar 6, 2016 6:10:26 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8642"},{"text":"%md\n###Logistic regression\nIllustration ici : https://www.mssqltips.com/tipimages2/3471_Example.JPG","dateUpdated":"Mar 6, 2016 7:25:30 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287750197_-1562955191","id":"20160306-180910_338661250","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Logistic regression</h3>\n<p>Illustration ici : https://www.mssqltips.com/tipimages2/3471_Example.JPG</p>\n"},"dateCreated":"Mar 6, 2016 6:09:10 PM","dateStarted":"Mar 6, 2016 6:10:40 PM","dateFinished":"Mar 6, 2016 6:10:40 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8643"},{"text":"import org.apache.spark.ml.classification.LogisticRegression\n\nval model = new LogisticRegression()\n  .setMaxIter(40)\n  .setFeaturesCol(\"features\")\n.setLabelCol(\"survivedIndexed\")\n  ","dateUpdated":"Mar 6, 2016 7:25:36 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287773281_-1434048985","id":"20160306-180933_2043915456","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.classification.LogisticRegression\nmodel: org.apache.spark.ml.classification.LogisticRegression = logreg_8555dadfd5e4\n"},"dateCreated":"Mar 6, 2016 6:09:33 PM","dateStarted":"Mar 6, 2016 7:25:32 PM","dateFinished":"Mar 6, 2016 7:25:32 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8644"},{"text":"%md\n#Definition du Workfow de transformation (Pipeline)\n\nLes étapes de transformation : \n- Transformer sex en Double (via le transformer sexIndexer). sex => indexedSex\n- Transformer embarked en Double (via le transformer embarkedIndexer). embarked=> indexedEmbarked \n- Transformer Pclass,indexedSex ,age,SibSp,Parch,Fare,indexedEmbarked  en tableau de Double (via le transformer assembler) : Pclass,indexedSex ,age,SibSp,Parch,Fare,indexedEmbarked => Features\n- Transformer label en Double (via le transformer labelIndexer). label=> survivedIndexed\n- Estimer le modèle via les variable features et survivedIndexed (via l'estimator model)","dateUpdated":"Mar 6, 2016 7:26:07 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287902064_1986338612","id":"20160306-181142_954062513","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Definition du Workfow de transformation (Pipeline)</h1>\n<p>Les étapes de transformation :</p>\n<ul>\n<li>Transformer sex en Double (via le transformer sexIndexer). sex => indexedSex</li>\n<li>Transformer embarked en Double (via le transformer embarkedIndexer). embarked=> indexedEmbarked</li>\n<li>Transformer Pclass,indexedSex ,age,SibSp,Parch,Fare,indexedEmbarked  en tableau de Double (via le transformer assembler) : Pclass,indexedSex ,age,SibSp,Parch,Fare,indexedEmbarked => Features</li>\n<li>Transformer label en Double (via le transformer labelIndexer). label=> survivedIndexed</li>\n<li>Estimer le modèle via les variable features et survivedIndexed (via l'estimator model)</li>\n</ul>\n"},"dateCreated":"Mar 6, 2016 6:11:42 PM","dateStarted":"Mar 6, 2016 7:26:04 PM","dateFinished":"Mar 6, 2016 7:26:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8645"},{"text":"import org.apache.spark.ml.Pipeline\n\nval pipeline = new Pipeline()\n  .setStages(Array(sexIndexer,embarkedIndexer,assembler,labelIndexer,  model))","dateUpdated":"Mar 6, 2016 7:26:12 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287914716_-1836895884","id":"20160306-181154_1733907124","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.ml.Pipeline\npipeline: org.apache.spark.ml.Pipeline = pipeline_1d06ebda2821\n"},"dateCreated":"Mar 6, 2016 6:11:54 PM","dateStarted":"Mar 6, 2016 7:26:12 PM","dateFinished":"Mar 6, 2016 7:26:12 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8646"},{"text":"%md \nPasser au notebook 3 : entrainement et analyse du modèle","dateUpdated":"Mar 6, 2016 7:26:15 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457287918964_-220950504","id":"20160306-181158_91078205","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Passer au notebook 3 : entrainement et analyse du modèle</p>\n"},"dateCreated":"Mar 6, 2016 6:11:58 PM","dateStarted":"Mar 6, 2016 6:18:28 PM","dateFinished":"Mar 6, 2016 6:18:28 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8647"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457288280124_1716398126","id":"20160306-181800_235484356","dateCreated":"Mar 6, 2016 6:18:00 PM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:8648"}],"name":"02 - Titanic : Construire le modèle","id":"2BFYRMQC7","angularObjects":{"2BBC1SW3U":[],"2BEH7W6JH":[],"2BF9Y1JY7":[],"2BC6TYAD1":[]},"config":{"looknfeel":"default"},"info":{}}