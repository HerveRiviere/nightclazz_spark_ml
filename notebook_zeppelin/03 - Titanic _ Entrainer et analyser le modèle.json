{"paragraphs":[{"text":"%md\n#Entrainement du modèle","dateUpdated":"Mar 6, 2016 7:26:23 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457288336175_-873838739","id":"20160306-181856_1722760499","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Entrainement du modèle</h1>\n"},"dateCreated":"Mar 6, 2016 6:18:56 PM","dateStarted":"Mar 6, 2016 6:19:28 PM","dateFinished":"Mar 6, 2016 6:19:28 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9092"},{"text":"val Array(trainingData, testData) = df.randomSplit(Array(0.7, 0.3),15L)\n\n\n// Train model.  This also runs the indexers.\nval genModel = pipeline.fit(trainingData)\n// Make predictions.\nval predictions = genModel.transform(testData)\npredictions.select(\"Pclass\",\"sex\",\"age\",\"SibSp\",\"embarked\",\"survived\",\"prediction\",\"probability\").registerTempTable(\"testPredictions\")","dateUpdated":"Mar 6, 2016 7:26:28 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457288368969_-607931277","id":"20160306-181928_1998401048","result":{"code":"SUCCESS","type":"TEXT","msg":"trainingData: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double]\ntestData: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double]\ngenModel: org.apache.spark.ml.PipelineModel = pipeline_1d06ebda2821\npredictions: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double, indexedSex: double, indexedEmbarked: double, features: vector, survivedIndexed: double, rawPrediction: vector, probability: vector, prediction: double]\n"},"dateCreated":"Mar 6, 2016 6:19:28 PM","dateStarted":"Mar 6, 2016 7:26:25 PM","dateFinished":"Mar 6, 2016 7:26:28 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9093"},{"text":"%md\nPourquoi séparer en 30 et 70 % ?\nPour tester le modèle avec des données non utilisées pour son entrainement ! ","dateUpdated":"Mar 6, 2016 7:27:16 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457288387164_1407180959","id":"20160306-181947_1037432305","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Pourquoi séparer en 30 et 70 % ?\n<br  />Pour tester le modèle avec des données non utilisées pour son entrainement !</p>\n"},"dateCreated":"Mar 6, 2016 6:19:47 PM","dateStarted":"Mar 6, 2016 7:27:14 PM","dateFinished":"Mar 6, 2016 7:27:14 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9094"},{"text":"%md\n##Mesurer la performance du modèle\nAvec l'aide de commande sql, estimer : \n- Taux de bonnes predictions (prediction=survived) : 78%\n- Taux de mauvaises predictions (prediction!=survived) : 22%\n- \n- Taux de vrai positifs (prediction= 1 and survived =1) : 72%\n- Taux de faux positifs = indiqué mort mais ayant en fait survécu (prediction= 0 and survived =1) : 28%\n- \n- Taux de vrai négatifs (prediction= 1 and survived =0) : 88%\n- Taux de faux négatifs = indiqué survivant mais ayant en fait non survécu (prediction= 1 and survived =0) : 11%\n- \n\n__Le modèle prédit plus de faux positifs (indiqué mort mais ayant en fait survécu) que de faux negatifs ( indiqué survivant mais ayant en fait non survécu )__","dateUpdated":"Mar 6, 2016 7:28:58 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457288400243_2011652129","id":"20160306-182000_328808571","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Mesurer la performance du modèle</h2>\n<p>Avec l'aide de commande sql, estimer :</p>\n<ul>\n<li>Taux de bonnes predictions (prediction=survived) : 78%</li>\n<li>Taux de mauvaises predictions (prediction!=survived) : 22%</li>\n<li></li>\n<li>Taux de vrai positifs (prediction= 1 and survived =1) : 72%</li>\n<li>Taux de faux positifs = indiqué mort mais ayant en fait survécu (prediction= 0 and survived =1) : 28%</li>\n<li></li>\n<li>Taux de vrai négatifs (prediction= 1 and survived =0) : 88%</li>\n<li>Taux de faux négatifs = indiqué survivant mais ayant en fait non survécu (prediction= 1 and survived =0) : 11%</li>\n<li></li>\n</ul>\n<p><strong>Le modèle prédit plus de faux positifs (indiqué mort mais ayant en fait survécu) que de faux negatifs ( indiqué survivant mais ayant en fait non survécu )</strong></p>\n"},"dateCreated":"Mar 6, 2016 6:20:00 PM","dateStarted":"Mar 6, 2016 7:28:57 PM","dateFinished":"Mar 6, 2016 7:28:57 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9095"},{"text":"%spark\nsqlContext.sql(\"select count(*) nb_positifs from testPredictions where survived =1\").show()\nsqlContext.sql(\"select (count(*)/86)*100 from testPredictions where survived =1 group by prediction\").show()\n\nsqlContext.sql(\"select count(*) nb_negatifs from testPredictions where survived =0\").show()\nsqlContext.sql(\"select (count(*)/117)*100 from testPredictions where survived =0 group by prediction\").show()","dateUpdated":"Mar 6, 2016 7:28:21 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457289401703_905369346","id":"20160306-183641_1011917434","result":{"code":"SUCCESS","type":"TEXT","msg":"+-----------+\n|nb_positifs|\n+-----------+\n|         86|\n+-----------+\n\n+------------------+\n|               _c0|\n+------------------+\n| 70.93023255813954|\n|29.069767441860467|\n+------------------+\n\n+-----------+\n|nb_negatifs|\n+-----------+\n|        117|\n+-----------+\n\n+-----------------+\n|              _c0|\n+-----------------+\n|11.11111111111111|\n|88.88888888888889|\n+-----------------+\n\n"},"dateCreated":"Mar 6, 2016 6:36:41 PM","dateStarted":"Mar 6, 2016 7:28:21 PM","dateFinished":"Mar 6, 2016 7:28:25 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9096"},{"text":"%md\n##Etudier comment à été construit le modèle\nPour rappel features = [\"Pclass\",\"indexedSex\" ,\"age\",\"SibSp\",\"Parch\",\"Fare\",\"indexedEmbarked\"]\n\nA l'aide de weights indiquer la formule de prediction : \nprediction = -1.20 * Pclass + 2.51 * indexedSex - 0.05 * age - 0.48 * SibSp - 0.08 *  Parch + 0.004 * Fare - 0.04 * indexedEmbarked\n\n__Les variables avec le plus de significativités : age, sexe puis SibSp__\n","dateUpdated":"Mar 6, 2016 7:29:25 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457288691983_-154085750","id":"20160306-182451_1229589725","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Etudier comment à été construit le modèle</h2>\n<p>Pour rappel features = [&ldquo;Pclass&rdquo;,&ldquo;indexedSex&rdquo; ,&ldquo;age&rdquo;,&ldquo;SibSp&rdquo;,&ldquo;Parch&rdquo;,&ldquo;Fare&rdquo;,&ldquo;indexedEmbarked&rdquo;]</p>\n<p>A l'aide de weights indiquer la formule de prediction :\n<br  />prediction = -1.20 * Pclass + 2.51 * indexedSex - 0.05 * age - 0.48 * SibSp - 0.08 *  Parch + 0.004 * Fare - 0.04 * indexedEmbarked</p>\n<p><strong>Les variables avec le plus de significativités : age, sexe puis SibSp</strong></p>\n"},"dateCreated":"Mar 6, 2016 6:24:51 PM","dateStarted":"Mar 6, 2016 7:29:22 PM","dateFinished":"Mar 6, 2016 7:29:22 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9097"},{"text":"%spark\n\nval logisticRegressionModel = genModel.stages(4).asInstanceOf[org.apache.spark.ml.classification.LogisticRegressionModel] \nprintln(logisticRegressionModel.weights)\n","dateUpdated":"Mar 6, 2016 7:08:58 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457289574754_1434428088","id":"20160306-183934_1499952862","result":{"code":"SUCCESS","type":"TEXT","msg":"logisticRegressionModel: org.apache.spark.ml.classification.LogisticRegressionModel = logreg_b186b9f3ac55\n[-1.1987595972727023,2.5176922158462944,-0.049545891280012314,-0.4805123418762486,-0.07508747336607169,0.004705717882007393,-0.04530417388469936]\norg.apache.spark.ml.classification.BinaryLogisticRegressionTrainingSummary@9567d53\n"},"dateCreated":"Mar 6, 2016 6:39:34 PM","dateStarted":"Mar 6, 2016 6:48:53 PM","dateFinished":"Mar 6, 2016 6:48:54 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9098"},{"text":"%md\nUtiliser le notebook 4 pour utiliser le modèle....","dateUpdated":"Mar 6, 2016 7:29:35 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457289609637_562263628","id":"20160306-184009_449158993","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Utiliser le notebook 4 pour utiliser le modèle&hellip;.</p>\n"},"dateCreated":"Mar 6, 2016 6:40:09 PM","dateStarted":"Mar 6, 2016 7:16:03 PM","dateFinished":"Mar 6, 2016 7:16:03 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9099"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457291752673_-1783500631","id":"20160306-191552_1292324738","dateCreated":"Mar 6, 2016 7:15:52 PM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:9100"}],"name":"03 - Titanic : Entrainer et analyser le modèle","id":"2BED7TB9G","angularObjects":{"2BBC1SW3U":[],"2BEH7W6JH":[],"2BF9Y1JY7":[],"2BC6TYAD1":[]},"config":{"looknfeel":"default"},"info":{}}