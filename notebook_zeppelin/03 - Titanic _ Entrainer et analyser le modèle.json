{"paragraphs":[{"text":"%md\n#Entrainement du modèle","dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938250_-420111207","id":"20160309-205538_35510236","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Entrainement du modèle</h1>\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2025"},{"text":"val Array(trainingData, testData) = df.randomSplit(Array(0.7, 0.3),15L)\n\n\n// Train model.  This also runs the indexers.\nval genModel = pipeline.fit(trainingData)\n// Make predictions.\nval predictions = genModel.transform(testData)\npredictions.select(\"Pclass\",\"sex\",\"age\",\"SibSp\",\"embarked\",\"survived\",\"prediction\",\"probability\").registerTempTable(\"testPredictions\")","dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938250_-420111207","id":"20160309-205538_77790882","result":{"code":"SUCCESS","type":"TEXT","msg":"trainingData: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double]\ntestData: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double]\ngenModel: org.apache.spark.ml.PipelineModel = pipeline_1d06ebda2821\npredictions: org.apache.spark.sql.DataFrame = [Pclass: int, sex: string, age: double, SibSp: int, Parch: int, Fare: double, embarked: string, survived: double, indexedSex: double, indexedEmbarked: double, features: vector, survivedIndexed: double, rawPrediction: vector, probability: vector, prediction: double]\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2026"},{"text":"%md\nPourquoi séparer en 30 et 70 % ?\nPour tester le modèle avec des données non utilisées pour son entrainement ! ","dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938250_-420111207","id":"20160309-205538_1488389190","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Pourquoi séparer en 30 et 70 % ?\n<br  />Pour tester le modèle avec des données non utilisées pour son entrainement !</p>\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2027"},{"text":"%md\n##Mesurer la performance du modèle\nAvec l'aide de commande sql, estimer : \n- Taux de bonnes predictions (prediction=survived) : 78%\n- Taux de mauvaises predictions (prediction!=survived) : 22%\n- \n- Taux de vrai positifs (prediction= 1 and survived =1) : 72%\n- Taux de faux positifs = indiqué mort mais ayant en fait survécu (prediction= 0 and survived =1) : 28%\n- \n- Taux de vrai négatifs (prediction= 1 and survived =0) : 88%\n- Taux de faux négatifs = indiqué survivant mais ayant en fait non survécu (prediction= 1 and survived =0) : 11%\n- \n\n__Le modèle prédit plus de faux positifs (indiqué mort mais ayant en fait survécu) que de faux negatifs ( indiqué survivant mais ayant en fait non survécu )__","dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938250_-420111207","id":"20160309-205538_1177152147","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Mesurer la performance du modèle</h2>\n<p>Avec l'aide de commande sql, estimer :</p>\n<ul>\n<li>Taux de bonnes predictions (prediction=survived) : 78%</li>\n<li>Taux de mauvaises predictions (prediction!=survived) : 22%</li>\n<li></li>\n<li>Taux de vrai positifs (prediction= 1 and survived =1) : 72%</li>\n<li>Taux de faux positifs = indiqué mort mais ayant en fait survécu (prediction= 0 and survived =1) : 28%</li>\n<li></li>\n<li>Taux de vrai négatifs (prediction= 1 and survived =0) : 88%</li>\n<li>Taux de faux négatifs = indiqué survivant mais ayant en fait non survécu (prediction= 1 and survived =0) : 11%</li>\n<li></li>\n</ul>\n<p><strong>Le modèle prédit plus de faux positifs (indiqué mort mais ayant en fait survécu) que de faux negatifs ( indiqué survivant mais ayant en fait non survécu )</strong></p>\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2028"},{"text":"%spark\nsqlContext.sql(\"select count(*) nb_positifs from testPredictions where survived =1\").show()\nsqlContext.sql(\"select (count(*)/86)*100 from testPredictions where survived =1 group by prediction\").show()\n\nsqlContext.sql(\"select count(*) nb_negatifs from testPredictions where survived =0\").show()\nsqlContext.sql(\"select (count(*)/117)*100 from testPredictions where survived =0 group by prediction\").show()","dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938251_-420495956","id":"20160309-205538_719742653","result":{"code":"SUCCESS","type":"TEXT","msg":"+-----------+\n|nb_positifs|\n+-----------+\n|         86|\n+-----------+\n\n+------------------+\n|               _c0|\n+------------------+\n| 70.93023255813954|\n|29.069767441860467|\n+------------------+\n\n+-----------+\n|nb_negatifs|\n+-----------+\n|        117|\n+-----------+\n\n+-----------------+\n|              _c0|\n+-----------------+\n|11.11111111111111|\n|88.88888888888889|\n+-----------------+\n\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2029"},{"text":"%angular\n<h2>Logistic regression</h2>\n<img src=\"http://mlpy.sourceforge.net/docs/3.5/_images/elasticnetc.png\"/>\n<img src=\"https://codesachin.files.wordpress.com/2015/08/linearly_separable_4.png\"/>\nRouge : Survivant\n<br/>\nBleu : non survivant\n<br/>","authenticationInfo":{},"dateUpdated":"Mar 9, 2016 9:46:16 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457558730718_151399609","id":"20160309-212530_1823784860","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<h2>Logistic regression</h2>\n<img src=\"http://mlpy.sourceforge.net/docs/3.5/_images/elasticnetc.png\"/>\n<img src=\"https://codesachin.files.wordpress.com/2015/08/linearly_separable_4.png\"/>\nRouge : Survivant\n<br/>\nBleu : non survivant\n<br/>"},"dateCreated":"Mar 9, 2016 9:25:30 PM","dateStarted":"Mar 9, 2016 9:46:16 PM","dateFinished":"Mar 9, 2016 9:46:16 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2030"},{"text":"%md\nSoit la fonction __f__ \nLa probabilité de survie est de p = exp(__f__)/(1+exp(__f__))\n#\nRappel : si X>0 : 1<exp(X)<+oo \nsi X<0 : 0<exp(X)<1 #\n#\nDonc si __f__>0 => p>0.5 => Survivant\nDonc si __f__<0 => p<0.5 => Non survivant","authenticationInfo":{},"dateUpdated":"Mar 9, 2016 9:53:31 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457560056197_685143212","id":"20160309-214736_719108254","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Soit la fonction <strong>f</strong>\n<br  />La probabilité de survie est de p = exp(<strong>f</strong>)/(1+exp(<strong>f</strong>))</p>\n<h1></h1>\n<p>Rappel : si X>0 : 1<exp(X)<+oo\n<br  />si X&lt;0 : 0&lt;exp(X)&lt;1 #</p>\n<h1></h1>\n<p>Donc si <strong>f</strong>>0 => p>0.5 => Survivant\n<br  />Donc si <strong>f</strong><0 => p<0.5 => Non survivant</p>\n"},"dateCreated":"Mar 9, 2016 9:47:36 PM","dateStarted":"Mar 9, 2016 9:53:23 PM","dateFinished":"Mar 9, 2016 9:53:23 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2031"},{"text":"%md\n##Etudier comment a été construit le modèle\nPour rappel features = [\"Pclass\",\"indexedSex\" ,\"age\",\"SibSp\",\"Parch\",\"Fare\",\"indexedEmbarked\"]\n\nA l'aide de weights indiquer la formule de la frontière de prédiction : \nf  = -1.20 * Pclass + 2.51 * indexedSex - 0.05 * age - 0.48 * SibSp - 0.08 *  Parch + 0.004 * Fare - 0.04 * indexedEmbarked\n\npClass  1,2 ou 3  donc Pclass influence f entre -3.6 et -1.20\nSex : 0 ou 1 donc entre +0 et + 2.5\nage : 0 à 100 donc entre -0 et -5\nSibsp : 0 à 4 donc entre -0 et -1.5\nparch : 0 à 4 donc entre 0 et 0.1\nFare etc...\n\n__Les variables avec le plus de significativités : Pclass, sex puis age__\n","authenticationInfo":{},"dateUpdated":"Mar 9, 2016 9:58:19 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938251_-420495956","id":"20160309-205538_966970029","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Etudier comment a été construit le modèle</h2>\n<p>Pour rappel features = [&ldquo;Pclass&rdquo;,&ldquo;indexedSex&rdquo; ,&ldquo;age&rdquo;,&ldquo;SibSp&rdquo;,&ldquo;Parch&rdquo;,&ldquo;Fare&rdquo;,&ldquo;indexedEmbarked&rdquo;]</p>\n<p>A l'aide de weights indiquer la formule de la frontière de prédiction :\n<br  />f  = -1.20 * Pclass + 2.51 * indexedSex - 0.05 * age - 0.48 * SibSp - 0.08 *  Parch + 0.004 * Fare - 0.04 * indexedEmbarked</p>\n<p>pClass  1,2 ou 3  donc Pclass influence f entre -3.6 et -1.20\n<br  />Sex : 0 ou 1 donc entre +0 et + 2.5\n<br  />age : 0 à 100 donc entre -0 et -5\n<br  />Sibsp : 0 à 4 donc entre -0 et -1.5\n<br  />parch : 0 à 4 donc entre 0 et 0.1\n<br  />Fare etc&hellip;</p>\n<p><strong>Les variables avec le plus de significativités : Pclass, sex puis age</strong></p>\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","dateStarted":"Mar 9, 2016 9:58:19 PM","dateFinished":"Mar 9, 2016 9:58:19 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2032"},{"text":"%spark\n\nval logisticRegressionModel = genModel.stages(4).asInstanceOf[org.apache.spark.ml.classification.LogisticRegressionModel] \nprintln(logisticRegressionModel.weights)\n","dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938251_-420495956","id":"20160309-205538_1507294443","result":{"code":"SUCCESS","type":"TEXT","msg":"logisticRegressionModel: org.apache.spark.ml.classification.LogisticRegressionModel = logreg_b186b9f3ac55\n[-1.1987595972727023,2.5176922158462944,-0.049545891280012314,-0.4805123418762486,-0.07508747336607169,0.004705717882007393,-0.04530417388469936]\norg.apache.spark.ml.classification.BinaryLogisticRegressionTrainingSummary@9567d53\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2033"},{"text":"%md\nUtiliser le notebook 4 pour utiliser le modèle....","dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938252_-422419700","id":"20160309-205538_1344501808","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Utiliser le notebook 4 pour utiliser le modèle&hellip;.</p>\n"},"dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2034"},{"dateUpdated":"Mar 9, 2016 8:55:38 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1457556938252_-422419700","id":"20160309-205538_1231634183","dateCreated":"Mar 9, 2016 8:55:38 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2035"}],"name":"03 - Titanic : Entrainer et analyser le modèle","id":"2BE2F2JSK","owners":[],"readers":[],"writers":[],"angularObjects":{"2BDGS26KH":[],"2BFKU3YF6":[],"2BFY4UKAS":[],"2BCYUSJ27":[]},"config":{"looknfeel":"default"},"info":{}}